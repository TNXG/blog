<script>
    window.addEventListener('load', async () => {
        navigator.serviceWorker.register(`/assets/js/sw.js?time=${new Date().getTime()}`)
            .then(async reg => {
                //安装成功，建议此处强刷新以立刻执行SW
                setTimeout(() => {
                    window.location.search = `?time=${new Date().getTime()}`
                }, 1000)
            }).catch(err => {
                //安装失败，错误信息会由err传参
            })
    });

    (async () => {
        if (window.localStorage.getItem("ChenBlogRefferrer") != 'setted') {
            if (!window.localStorage.getItem("ChenBlogRefferrer")) {
                window.localStorage.setItem("ChenBlogRefferrer", document.referrer)
            } else {

                window.localStorage.setItem("ChenBlogRefferrer", 'setted')
            }
        }
        document._onreadystatechange = document.onreadystatechange
        document.onreadystatechange = function () {
            document._onreadystatechange()
            if (document.readyState == 'complete') {
                setTimeout(() => {
                    ans = {
                        url: window.location.href,
                        ua: navigator.userAgent,
                        resource: [],
                        time: new Date().getTime(),
                        perform: {
                            paint: {},
                            dom: -1

                        },
                        refferrer: window.localStorage.getItem("ChenBlogRefferrer") == "setted" ? document.referrer : window.localStorage.getItem("ChenBlogRefferrer"),
                        memory: {
                            used: window.performance.memory.usedJSHeapSize,
                            total: window.performance.memory.totalJSHeapSize,
                            limit: window.performance.memory.jsHeapSizeLimit
                        }
                    }
                    for (var i of JSON.parse(JSON.stringify(performance.getEntries()))) {
                        if (i.entryType == 'paint') {
                            ans.perform.paint[i.name] = i.startTime
                            continue;
                        }
                        ans.resource.push({
                            name: i.name,
                            time: {
                                connect: i.connectEnd - i.connectStart,
                                dns: i.domainLookupEnd - i.domainLookupStart,
                                request: i.responseEnd - i.requestStart,
                                response: i.responseEnd - i.responseStart,
                                domcontent: i.domContentLoadedEventEnd - i.domContentLoadedEventStart,
                                loadevent: i.loadEventEnd - i.loadEventStart
                            }
                        })
                        if (!!i.domComplete && i.domComplete >= ans.perform.dom) {
                            ans.perform.dom = i.domComplete
                        }


                    }
                    send_msg({
                        type: "upload",
                        data: ans
                    }).then(data => {
                        console.log(data)
                        document.getElementById('user_count').innerText = data.user
                        document.getElementById('ip').innerText = data.ip
                        document.getElementById('loc').innerText = data.addr
                        document.getElementById('delay').innerText = data.delay + "ms"
                    })
                }, 2000);
            }
        }

    })()
</script>